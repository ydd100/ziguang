<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.userbackground.evaluateItem.mapper.CpEvaluateItemMapper">
    
    <resultMap type="CpEvaluateItem" id="CpEvaluateItemResult">
        <result property="evaluateItemId"    column="evaluate_item_id"    />
        <result property="sheetId"    column="sheet_id"    />
        <result property="evaluateTitle"    column="evaluate_title"    />
        <result property="evaluateValue"    column="evaluate_value"    />
        <result property="evaluateData"    column="evaluate_data"    />
        <result property="evaluateSort"    column="evaluate_sort"    />
        <result property="groupTitle"    column="group_title"    />
        <result property="columnDataId"    column="column_data_id"    />
    </resultMap>

    <sql id="selectCpEvaluateItemVo">
        select evaluate_item_id, sheet_id, evaluate_title, evaluate_value, evaluate_data, evaluate_sort, group_title,column_data_id from cp_evaluate_item
    </sql>

    <select id="selectCpEvaluateItemList" parameterType="CpEvaluateItem" resultMap="CpEvaluateItemResult">
        <include refid="selectCpEvaluateItemVo"/>
        <where>  
            <if test="sheetId != null "> and sheet_id = #{sheetId}</if>
            <if test="evaluateTitle != null  and evaluateTitle != ''"> and evaluate_title = #{evaluateTitle}</if>
            <if test="evaluateValue != null  and evaluateValue != ''"> and evaluate_value = #{evaluateValue}</if>
            <if test="evaluateData != null  and evaluateData != ''"> and evaluate_data = #{evaluateData}</if>
            <if test="evaluateSort != null  and evaluateSort != ''"> and evaluate_sort = #{evaluateSort}</if>
            <if test="groupTitle != null  and groupTitle != ''"> and group_title = #{groupTitle}</if>
        </where>
    </select>
    
    <select id="selectCpEvaluateItemByEvaluateItemId" parameterType="Long" resultMap="CpEvaluateItemResult">
        <include refid="selectCpEvaluateItemVo"/>
        where evaluate_item_id = #{evaluateItemId}
    </select>
        
    <insert id="insertCpEvaluateItem" parameterType="CpEvaluateItem" useGeneratedKeys="true" keyProperty="evaluateItemId">
        insert into cp_evaluate_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sheetId != null">sheet_id,</if>
            <if test="evaluateTitle != null">evaluate_title,</if>
            <if test="evaluateValue != null">evaluate_value,</if>
            <if test="evaluateData != null">evaluate_data,</if>
            <if test="evaluateSort != null">evaluate_sort,</if>
            <if test="groupTitle != null">group_title,</if>
            <if test="columnDataId != null">column_data_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sheetId != null">#{sheetId},</if>
            <if test="evaluateTitle != null">#{evaluateTitle},</if>
            <if test="evaluateValue != null">#{evaluateValue},</if>
            <if test="evaluateData != null">#{evaluateData},</if>
            <if test="evaluateSort != null">#{evaluateSort},</if>
            <if test="groupTitle != null">#{groupTitle},</if>
            <if test="columnDataId != null">#{columnDataId},</if>
         </trim>
    </insert>

    <update id="updateCpEvaluateItem" parameterType="CpEvaluateItem">
        update cp_evaluate_item
        <trim prefix="SET" suffixOverrides=",">
            <if test="sheetId != null">sheet_id = #{sheetId},</if>
            <if test="evaluateTitle != null">evaluate_title = #{evaluateTitle},</if>
            <if test="evaluateValue != null">evaluate_value = #{evaluateValue},</if>
            <if test="evaluateData != null">evaluate_data = #{evaluateData},</if>
            <if test="evaluateSort != null">evaluate_sort = #{evaluateSort},</if>
            <if test="groupTitle != null">group_title = #{groupTitle},</if>
            <if test="columnDataId != null">column_data_id = #{columnDataId},</if>
        </trim>
        where evaluate_item_id = #{evaluateItemId}
    </update>

    <delete id="deleteCpEvaluateItemByEvaluateItemId" parameterType="Long">
        delete from cp_evaluate_item where evaluate_item_id = #{evaluateItemId}
    </delete>

    <delete id="deleteCpEvaluateItemByEvaluateItemIds" parameterType="String">
        delete from cp_evaluate_item where evaluate_item_id in 
        <foreach item="evaluateItemId" collection="array" open="(" separator="," close=")">
            #{evaluateItemId}
        </foreach>
    </delete>
    
    <delete id="deleteCpEvaluateItemBySheetId" parameterType="Long">
        delete from cp_evaluate_item where sheet_id = #{sheetId}
    </delete>
    
    <!-- 根据sheetId查询所有项 -->
    <select id="selectCpEvaluateItemBySheetId" parameterType="Long" resultMap="CpEvaluateItemResult">
        <include refid="selectCpEvaluateItemVo"/>
        where sheet_id = #{sheetId} order by column_data_id,evaluate_sort*1
    </select>
    
    <!-- 根据column_data_id查询列对应项 -->
    <select id="selectCpEvaluateItemByColDataId" parameterType="Long" resultMap="CpEvaluateItemResult">
        <include refid="selectCpEvaluateItemVo"/>
        where column_data_id = #{columnDataId} order by column_data_id,evaluate_sort*1
    </select>
    
    <!-- 批量保存eva_item -->
    <insert id="batchInsertEvaItem" parameterType="Map" useGeneratedKeys="true">
    	insert into cp_evaluate_item (sheet_id, evaluate_title, evaluate_value, evaluate_data, evaluate_sort, group_title,column_data_id) 
    	values 
    	<if test="groupTitle != null and groupTitle !=''">
    		<foreach collection="evaItemList" item="evaItem" index="index" separator=","> 
	         (#{sheetId},#{evaItem.evaluateTitle},#{evaItem.evaluateValue},#{evaItem.evaluateData},#{evaItem.evaluateSort},#{groupTitle},#{columnDataId}) 
	     	</foreach>
    	</if>
    	<if test="groupTitle == null or groupTitle == ''">
    		<foreach collection="evaItemList" item="evaItem" index="index" separator=","> 
	         (#{sheetId},#{evaItem.evaluateTitle},#{evaItem.evaluateValue},#{evaItem.evaluateData},#{evaItem.evaluateSort},#{evaItem.groupTitle},#{columnDataId}) 
	     	</foreach> 
    	</if>
    	
    </insert>
    
    <!-- 根据批量的column_data_id删除eva_item -->
    <delete id="deleteCpEvaluateItemByColumnDataIds" parameterType="String">
        delete from cp_evaluate_item where column_data_id in 
        <foreach item="columnDataId" collection="array" open="(" separator="," close=")">
            #{columnDataId}
        </foreach>
    </delete>
    
    <!-- 根据column_data_id删除eva_item -->
    <delete id="deleteCpEvaluateItemByColumnDataId" parameterType="Long">
        delete from cp_evaluate_item where column_data_id = #{columnDataId}
    </delete>
    
    <!-- 根据sheetId和groupTitle查询colDataId -->
    <select id="selectColDataIdListBySheetIdGroupTitle" parameterType="CpEvaluateItem" resultType="Map">
    	select column_data_id colDataId from cp_evaluate_item 
    	where sheet_id = #{sheetId} and group_title=#{groupTitle} 
    	group by column_data_id 
    </select>

</mapper>