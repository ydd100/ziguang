<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.userbackground.columnData.mapper.CpColumnDataMapper">
    
    <resultMap type="CpColumnData" id="CpColumnDataResult">
        <result property="columnDataId"    column="column_data_id"    />
        <result property="sheetId"    column="sheet_id"    />
        <result property="columnTitle"    column="column_title"    />
        <result property="columnValue"    column="column_value"    />
        <result property="columnSort"    column="column_sort"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectCpColumnDataVo">
        select column_data_id, sheet_id, column_title, column_value, column_sort, create_time from cp_column_data
    </sql>

    <select id="selectCpColumnDataList" parameterType="CpColumnData" resultMap="CpColumnDataResult">
        <include refid="selectCpColumnDataVo"/>
        <where>  
            <if test="sheetId != null "> and sheet_id = #{sheetId}</if>
            <if test="columnTitle != null  and columnTitle != ''"> and column_title = #{columnTitle}</if>
            <if test="columnValue != null  and columnValue != ''"> and column_value = #{columnValue}</if>
            <if test="columnSort != null  and columnSort != ''"> and column_sort = #{columnSort}</if>
        </where>
    </select>
    
    <select id="selectCpColumnDataByColumnDataId" parameterType="Long" resultMap="CpColumnDataResult">
        <include refid="selectCpColumnDataVo"/>
        where column_data_id = #{columnDataId}
    </select>
        
    <insert id="insertCpColumnData" parameterType="CpColumnData" useGeneratedKeys="true" keyProperty="columnDataId">
        insert into cp_column_data
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sheetId != null">sheet_id,</if>
            <if test="columnTitle != null">column_title,</if>
            <if test="columnValue != null">column_value,</if>
            <if test="columnSort != null">column_sort,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sheetId != null">#{sheetId},</if>
            <if test="columnTitle != null">#{columnTitle},</if>
            <if test="columnValue != null">#{columnValue},</if>
            <if test="columnSort != null">#{columnSort},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateCpColumnData" parameterType="CpColumnData">
        update cp_column_data
        <trim prefix="SET" suffixOverrides=",">
            <if test="sheetId != null">sheet_id = #{sheetId},</if>
            <if test="columnTitle != null">column_title = #{columnTitle},</if>
            <if test="columnValue != null">column_value = #{columnValue},</if>
            <if test="columnSort != null">column_sort = #{columnSort},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where column_data_id = #{columnDataId}
    </update>

    <delete id="deleteCpColumnDataByColumnDataId" parameterType="Long">
        delete from cp_column_data where column_data_id = #{columnDataId}
    </delete>

    <delete id="deleteCpColumnDataByColumnDataIds" parameterType="String">
        delete from cp_column_data where column_data_id in 
        <foreach item="columnDataId" collection="array" open="(" separator="," close=")">
            #{columnDataId}
        </foreach>
    </delete>
    
    <!-- 根据sheet_id获取column的最大排序的序号 -->
    <select id="selectMaxSortGroupBySheetId" parameterType="Long" resultType="Map">
    	select max(cast(column_sort as SIGNED)) as columnSort from cp_column_data where sheet_id=#{sheetId} group by sheet_id
    </select>
    
    <delete id="deleteCpColumnDataBySheetId" parameterType="Long">
        delete from cp_column_data where sheet_id = #{sheetId}
    </delete>
    
    <!-- 根据sheetId组合查询colData和evaItem -->
    <select id="selectCpColumnDataBySheetId" parameterType="Long" resultType="Map">
        select cd.column_data_id columnDataId,cd.column_title columnTitle,cd.column_value columnValue,cd.column_sort columnSort,cd.sheet_id sheetId,e.group_title groupTitle 
        from cp_column_data cd left join cp_evaluate_item e on cd.column_data_id = e.column_data_id 
        where cd.sheet_id = #{sheetId} 
        group by cd.column_data_id,cd.column_title,cd.column_value,cd.column_sort,cd.sheet_id,cd.create_time,e.group_title 
        order by cd.column_sort*1,cd.column_data_id
    </select>
    
    <!-- 根据sheetId查询colData数据 -->
    <select id="selectColDataBySheetId" parameterType="Long" resultMap="CpColumnDataResult">
        <include refid="selectCpColumnDataVo"/>
        where sheet_id = #{sheetId} order by column_sort*1
    </select>

</mapper>